

 {%- comment %}
  @param cart (cart, mandatory)
  @param checkout_url (string, mandatory) the checkout url
  @param checkout_button_selector (string) the query selector for the checkout button
{% endcomment -%}

{% unless checkout_url %}
	{% assign checkout_url = 'https://checkout.massage-lab.com' %}
{% endunless %}

{% unless checkout_button_selector %}
  {% assign checkout_button_selector = '[type="button"][name="checkouts"]' %}
{% endunless %}
<script>
    
         var urlav = new URL(window.location.href);
        var search_paramsaa = new URLSearchParams(urlav.search);
   var affids;
         console.log(affids);
 if (window.location.href.indexOf("affId") > -1) {
      console.log("url have affId");
       affids = search_paramsaa.get("affId").split("&"); 
    }
    else{
let kkids = localStorage.getItem("affIdnew");
affids = kkids;

}

  document.addEventListener("DOMContentLoaded", function () {
    var debug = true ? console.log.bind(console, '[DEBUG][RedirectCart]') : function () {};
    debug('Script loaded');
    window.RedirectCart = function (options) {
      var self = {};
      function productIdsWithQuantities() {
        {%- assign added_first = false -%}
        return {
          {%- for item in cart.items -%}
            {%- if item.variant.metafields.productId.productId -%}
              {%- if added_first %},{% endif -%}
              "{{ item.variant.metafields.productId.productId }}": {{ item.quantity | json }}
              {%- assign added_first = true -%}
            {%- endif -%}
          {%- endfor -%}
        };
      }     
      function init() {
        self.options = Object.assign({
          products: productIdsWithQuantities(),
          checkoutButtonSelector: '{{ checkout_button_selector }}',
          checkoutUrl: '{{ checkout_url }}',
        }, options);
        self.$checkoutButton = $(self.options.checkoutButtonSelector);
        debug('Initialized with options', self.options);
        
        inject();
      }
      function inject() {
        debug('Inject');
        self.$checkoutButton.on('click', checkout);
      }
function checkout(event) {
        var checkoutUrl = getCheckoutURL(self.options.products);
        debug('Checkout ->', checkoutUrl);
        event.preventDefault();
         var xhrClearCart = new XMLHttpRequest();
          xhrClearCart.open('POST', '/cart/clear.js', true);
          xhrClearCart.send();  
        window.location.href = checkoutUrl;
      }
    
      
      function getCartCookie(name) {
       var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        if (match){ 
          return match[2];
          }
 	  }
      function getCheckoutURL(products) {
         cookie = getCartCookie('cart');
        var urlLineItems = Object.keys(products).reduce(function (output, productId) {
          var quantity = products[productId];
          return output.concat([ productId + ':' + quantity ]);
        }, []).join(';');
   
        
        
        
        if(affids==""){
        	console.log("no affid");
          return self.options.checkoutUrl + '?products=' + urlLineItems + ';&cartId='+cookie;
        }
        else{
			console.log("found affid:   "+affids);
          return self.options.checkoutUrl + '?products=' + urlLineItems + ';&affId=' + affids + '&cartId='+cookie;
        }
        
        
      }
      init();
      return self;
    };
    var instance = new RedirectCart();
  });


</script>